<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baobao.common.mapping.TaskMapper">
  <resultMap id="BaseResultMap" type="com.baobao.common.model.Task">
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="task_title" jdbcType="VARCHAR" property="taskTitle" />
    <result column="task_des" jdbcType="VARCHAR" property="taskDes" />
    <result column="task_deadline" jdbcType="TIMESTAMP" property="taskDeadline" />
    <result column="task_create_user_id" jdbcType="INTEGER" property="taskCreateUserId" />
    <result column="task_create_time" jdbcType="TIMESTAMP" property="taskCreateTime" />
    <result column="task_finsh_state" jdbcType="INTEGER" property="taskFinshState" />
  </resultMap>
  <sql id="Base_Column_List">
    task_id, task_title, task_des, task_deadline, task_create_user_id, task_create_time, 
    task_finsh_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <select id="selectByDeadline" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where task_id = #{taskId,jdbcType=INTEGER} and task_deadline &lt;=now()
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.baobao.common.model.Task">
    insert into task (task_id, task_title, task_des, 
      task_deadline, task_create_user_id, task_create_time, 
      task_finsh_state)
    values (#{taskId,jdbcType=INTEGER}, #{taskTitle,jdbcType=VARCHAR}, #{taskDes,jdbcType=VARCHAR}, 
      #{taskDeadline,jdbcType=TIMESTAMP}, #{taskCreateUserId,jdbcType=INTEGER}, #{taskCreateTime,jdbcType=TIMESTAMP}, 
      #{taskFinshState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.baobao.common.model.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskTitle != null">
        task_title,
      </if>
      <if test="taskDes != null">
        task_des,
      </if>
      <if test="taskDeadline != null">
        task_deadline,
      </if>
      <if test="taskCreateUserId != null">
        task_create_user_id,
      </if>
      <if test="taskCreateTime != null">
        task_create_time,
      </if>
      <if test="taskFinshState != null">
        task_finsh_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskTitle != null">
        #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDes != null">
        #{taskDes,jdbcType=VARCHAR},
      </if>
      <if test="taskDeadline != null">
        #{taskDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="taskCreateUserId != null">
        #{taskCreateUserId,jdbcType=INTEGER},
      </if>
      <if test="taskCreateTime != null">
        #{taskCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskFinshState != null">
        #{taskFinshState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baobao.common.model.Task">
    update task
    <set>
      <if test="taskTitle != null">
        task_title = #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDes != null">
        task_des = #{taskDes,jdbcType=VARCHAR},
      </if>
      <if test="taskDeadline != null">
        task_deadline = #{taskDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="taskCreateUserId != null">
        task_create_user_id = #{taskCreateUserId,jdbcType=INTEGER},
      </if>
      <if test="taskCreateTime != null">
        task_create_time = #{taskCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskFinshState != null">
        task_finsh_state = #{taskFinshState,jdbcType=INTEGER},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.baobao.common.model.Task">
    update task
    set task_title = #{taskTitle,jdbcType=VARCHAR},
      task_des = #{taskDes,jdbcType=VARCHAR},
      task_deadline = #{taskDeadline,jdbcType=TIMESTAMP},
      task_create_user_id = #{taskCreateUserId,jdbcType=INTEGER},
      task_create_time = #{taskCreateTime,jdbcType=TIMESTAMP},
      task_finsh_state = #{taskFinshState,jdbcType=INTEGER}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="overTask" parameterType="java.lang.Integer">
    update task
    set task_finsh_state = 1
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  
  <update id="overTaskByTime" >
    update task
    set task_finsh_state = 1
    where task_deadline &lt;=now()
  </update>
  
  <select id="selectNoSuccess" resultType="java.lang.Integer">
  	SELECT 
	task_join_id
FROM
	task_join
LEFT JOIN task ON task_join_belong = task_id
where task.task_finsh_state = 1 and task_join_finsh_state !=1
  </select>
  
  <update id="updateState">
  	update task_join set task_join_finsh_state = 3
WHERE task_join_id in <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
  </update>
  
  <!-- app查询 获取任务列表 -->
  <resultMap type="com.baobao.common.model.andshow.TaskList" id="TaskListResultMap">
  	<id column="task_id" jdbcType="INTEGER" property="taskId" />
  	<result property="taskTitle" column="task_title" jdbcType="VARCHAR"/>
  	<result property="taskCreaterName" column="member_name" jdbcType="VARCHAR"/>
  	<result property="taskDeadLine" column="task_deadline" jdbcType="TIMESTAMP"/>
  	<result property="taskState" column="task_finsh_state" jdbcType="INTEGER"/>
  </resultMap>
  
  <sql id="Task_List">
 	 task_id,task_title,member_name,task_deadline
  </sql>
  
  <select id="getWillTaskLit" resultMap="TaskListResultMap" parameterType="java.lang.Integer">
  	select <include refid="Task_List"></include>,task_join_finsh_state as task_finsh_state
  	from task left join member_tab on task_create_user_id = member_id left join task_join on task_join_belong = task_id
  	where task_join_user_id = #{userId}
  </select>
  
  <select id="getMyTaskLit" resultMap="TaskListResultMap" parameterType="java.lang.Integer">
  	select <include refid="Task_List"></include>,task_finsh_state 
  	from task left join member_tab on task_create_user_id = member_id 
  	where task_create_user_id = #{userId}
  </select>
  
  <!-- app获取任务详情 -->
  <resultMap type="com.baobao.common.model.andshow.TaskDetail" id="Task_Detail_ResultMap" extends="TaskListResultMap">
  		<result property="taskDes" column="task_des" jdbcType="VARCHAR"/>
  		<collection property="userStates" ofType="com.baobao.common.model.andshow.TaskUserState">
  			<result property="userName" column="user_name" jdbcType="VARCHAR"/>
  			<result property="taskFinshState" column="task_join_finsh_state" jdbcType="INTEGER"/>
  		</collection>
  		<collection property="taskFeedbacks" ofType="com.baobao.common.model.andshow.TaskFeedback">
  			<result property="userName" column="des_user_name" jdbcType="VARCHAR"/>
  			<result property="userImg" column="user_img"  jdbcType="VARCHAR"/>
  			<result property="time" column="task_join_finsh_time"  jdbcType="TIMESTAMP"/>
  			<result property="taskDes" column="task_join_finsh_des" jdbcType="VARCHAR"/>
  			<collection property="files" ofType="com.baobao.common.model.andshow.AppTaskFile">
  				<result property="fileUrl" column="task_finish_file_url" jdbcType="VARCHAR"/>
  			<result property="fileName" column="task_finish_file_name" jdbcType="VARCHAR"/>
  			</collection>
  		</collection>
  		<collection property="files" ofType="com.baobao.common.model.andshow.AppTaskFile">
  			<result property="fileUrl" column="task_file_url" jdbcType="VARCHAR"/>
  			<result property="fileName" column="task_file_name" jdbcType="VARCHAR"/>
  		</collection>
  </resultMap>
  	
  	<sql id="Task_Detail">
  		<include refid="Task_List"></include>,task_finsh_state,task_des,user_name,task_join_finsh_state,des_user_name,user_img,task_join_finsh_time,task_join_finsh_des
  		,task_file_url,task_file_name,task_finish_file_url,task_finish_file_name
  	</sql>
  	
  <select id="getTaskDetail" resultMap="Task_Detail_ResultMap" parameterType="java.lang.Integer">
  	select <include refid="Task_Detail"></include>
  	from task left join 
  	(select member_name as user_name,task_join_finsh_state,task_join_belong from task_join left join member_tab on task_join_user_id = member_id) as user_states on task_id = user_states.task_join_belong
  	left join 
  	(select member_name as des_user_name,member_photoURL as user_img,task_join_finsh_time,task_join_finsh_des,task_join_belong,task_file_url as task_finish_file_url,task_file_name as task_finish_file_name FROM
		task_join
	LEFT JOIN member_tab ON task_join_user_id = member_id
	LEFT JOIN task_finsh_file on task_finsh_belong = task_join_id
	LEFT JOIN task_file ON task_finsh_file_belong = task_file_id
	WHERE
		task_join_finsh_state = 1) as user_des on task_id = user_des.task_join_belong
  	left join task_file on task_file_belong = task_id 
  	LEFT JOIN member_tab on task_create_user_id = member_id
  	where task_id = #{taskId}
  </select>
  
  
</mapper>